# 3. Массив размером 2m + 1, где m — натуральное число, заполнен случайным образом. Найдите в массиве медиану.
# Медианой называется элемент ряда, делящий его на две равные части: в одной находятся элементы, которые не меньше
# медианы, в другой — не больше медианы.
# Примечание: задачу можно решить без сортировки исходного массива. Но если это слишком сложно, используйте метод
# сортировки, который не рассматривался на уроках (сортировка слиянием также недопустима).

import random


# Группировка по битам для MSD-сортировки
def msd_group(array, pos):
    a_0 = []    # Здесь будут лежать числа с битом 0 в позиции pos
    a_1 = []    # Здесь будут лежать числа с битом 1 в позиции pos

    for v in array:
        if v >> pos & 1:
            a_1.append(v)
        else:
            a_0.append(v)

    if pos == 0:
        return a_0 + a_1
    else:
        return msd_group(a_0, pos - 1) + msd_group(a_1, pos - 1)


# MSD-сортировка
def msd_sort(array):
    # Определяем длину максимального числа в битовом представлении
    max_length = 0
    for v in array:
        length = v.bit_length()
        if max_length < length:
            max_length = length

    # Будем группировать рекурсивно начиная со старшего бита
    return msd_group(array, max_length - 1)


m = 10
a = [random.randint(0, 99) for _ in range(2 * m + 1)]
print('Исходный массив: ', a)
b = msd_sort(a)
print('Отсортированный массив после MSD-сортировки: ', b)
print('Медиана: ', b[m])
